  apiVersion: karpenter.sh/v1
  kind: NodePool
  metadata:
    namespace : karpenter
    name: default
  spec:
    template:
      spec:
        requirements:
          - key: "node.kubernetes.io/instance-type"
            operator: In
            values: ["t3a.large"]
        nodeClassRef:
          group: karpenter.k8s.aws
          kind: EC2NodeClass
          name: default
  ---
  apiVersion: karpenter.k8s.aws/v1
  kind: EC2NodeClass
  metadata:
    namespace : karpenter
    name: default
  spec:
    kubelet:
      podsPerCore: 2
      maxPods: 20
      systemReserved:
        cpu: 100m
        memory: 100Mi
        ephemeral-storage: 1Gi
      kubeReserved:
        cpu: 200m
        memory: 100Mi
        ephemeral-storage: 3Gi
      evictionHard:
        memory.available: 5%
        nodefs.available: 10%
        nodefs.inodesFree: 10%
      evictionSoft:
        memory.available: 500Mi
        nodefs.available: 15%
        nodefs.inodesFree: 15%
      evictionSoftGracePeriod:
        memory.available: 1m
        nodefs.available: 1m30s
        nodefs.inodesFree: 2m
      evictionMaxPodGracePeriod: 60
      imageGCHighThresholdPercent: 85
      imageGCLowThresholdPercent: 80

    # Optional, dictates UserData generation and default block device mappings.
    # May be ommited when using an `alias` amiSelectorTerm, otherwise required.
    amiFamily: BottleRocket

    # Required, discovers subnets to attach to instances
    # Each term in the array of subnetSelectorTerms is ORed together
    # Within a single term, all conditions are ANDed
    subnetSelectorTerms:
      # Select on any subnet that has the "karpenter.sh/discovery:
      # AND the "environment: test" tag OR any subnet with ID "subnet-09fa4a0a8f233a921"
      - tags:
          karpenter.sh/discovery: "${module.eks.cluster_name}"
          environment: test

    # Required, discovers security groups to attach to instances
    # Each term in the array of securityGroupSelectorTerms is ORed together
    # Within a single term, all conditions are ANDed
    securityGroupSelectorTerms:
      # Select on any security group that has both the "karpenter.sh/discovery:" tag
      # AND the "environment: test" tag OR any security group with the "my-security-group" name
      # OR any security group with ID "sg-063d7acfb4b06c82c"
      - tags:
          karpenter.sh/discovery: "${module.eks.cluster_name}"

    # Optional, IAM role to use for the node identity.
    # The "role" field is immutable after EC2NodeClass creation. This may change in the
    # future, but this restriction is currently in place today to ensure that Karpenter
    # avoids leaking managed instance profiles in your account.
    # Must specify one of "role" or "instanceProfile" for Karpenter to launch nodes
    role: "${var.iam_roles.eks_node_role.arn}"

    # Optional, configures IMDS for the instance
    metadataOptions:
      httpEndpoint: enabled
      httpProtocolIPv6: disabled
      httpPutResponseHopLimit: 2 # This is changed to disable IMDS access from containers not on the host network
      httpTokens: required

    # Optional, configures storage devices for the instance
    blockDeviceMappings:
      - deviceName: /dev/xvda
        ebs:
          volumeSize: 20Gi
          volumeType: gp3
          encrypted: true
          deleteOnTermination: true
          throughput: 125

    # Optional, configures detailed monitoring for the instance
    detailedMonitoring: false

  status:
    # Capacity Reservations
    capacityReservations:
      - availabilityZone: ap-south-1a
        instanceType: t3a.large
      - availabilityZone: ap-south-1c
        instanceType: t3a.large